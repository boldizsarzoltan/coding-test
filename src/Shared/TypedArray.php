<?php

namespace App\Shared;

use ArrayObject;

abstract class TypedArray extends ArrayObject
{
    public function __construct(object|array $array = [], int $flags = 0, string $iteratorClass = "ArrayIterator")
    {

        parent::__construct($array, $flags, $iteratorClass);
    }

    public function append(mixed $value): void
    {
        parent::append($value); // TODO: Change the autogenerated stub
    }

    public function offsetSet(mixed $key, mixed $value): void
    {
        parent::offsetSet($key, $value); // TODO: Change the autogenerated stub
    }

    public function exchangeArray(object|array $array): array
    {
        parent::exchangeArray($array); // TODO: Change the autogenerated stub
    }

    private function verifyType(object $object): void
    {
        if(is_a($object, $this->getType())) {
            return;
        }
        throw new InvalidTypeError("{$object::class} is not of type");
    }

    abstract protected function getType(): string;
}